import numpy as np
from ecogvis.signal_processing.common_referencing import subtract_CAR,subtract_common_median_reference

def test_subtract_CAR():
    X = np.array([[ 1.25779548e+00,  2.78352267e+00,  9.18397280e-03,
                    -5.51117711e-01,  1.37866637e+00,  6.21185807e-01,
                    -1.30892274e+00, -9.28462616e-01, -1.93909838e+00,
                    -6.32686666e-01],
                   [-7.21305190e-01, -6.62137621e-02,  1.28673216e-01,
                     1.52707851e-01,  1.27775057e+00,  3.41389030e-04,
                    -2.49739494e-01,  2.45367603e+00,  9.71626212e-01,
                     1.43835727e+00],
                   [-3.10078989e-01,  1.54084305e+00,  6.02271569e-01,
                     3.48794788e-01,  3.23189773e-01, -1.38687850e+00,
                     8.14583419e-02, -1.34314814e+00, -2.68400022e-01,
                     2.61940862e-01]])
    
    Xsc = subtract_CAR(X,b_size=2)
    
    Xsc_expected = np.array([[ 0.98955034,  1.42486822, -0.05974462, -0.35191278,  0.0504579 ,
                             0.31042221, -0.52959162, -1.69106932, -1.4553623 , -1.03552197],
                           [-0.98955034, -1.42486822,  0.05974462,  0.35191278, -0.0504579 ,
                            -0.31042221,  0.52959162,  1.69106932,  1.4553623 ,  1.03552197],
                           [ 0.        ,  0.        ,  0.        ,  0.        ,  0.        ,
                             0.        ,  0.        ,  0.        ,  0.        ,  0.        ]])
    
    np.testing.assert_almost_equal(Xsc,Xsc_expected)


def test_subtract_common_median_reference():
    X = np.array([[[-9.42410095e-01, -1.02009301e+00,  3.99282177e-01,
                  1.30034361e+00,  2.73769961e+00, -6.55205373e-01,
                  2.97566212e-01, -5.46949687e-01, -1.20873192e+00,
                  1.30560429e-01],
                [ 4.55299957e-01,  6.60436981e-01,  3.88351144e-01,
                  1.93529988e+00,  2.94673535e-01, -1.30247197e+00,
                 -8.81643773e-02, -7.16574285e-02, -6.00224854e-02,
                 -1.76946904e-01],
                [ 8.80924214e-01, -5.32676540e-01,  9.44747687e-01,
                 -7.84572341e-01, -4.87063409e-01,  1.99277222e-01,
                  9.39759000e-01, -6.31956946e-01, -4.96448759e-01,
                 -2.24774570e-02]],

               [[ 6.37634035e-01,  4.63024358e-01, -2.46156479e+00,
                  4.56806562e-01,  3.32699904e-01,  1.14122469e+00,
                  1.18342435e+00,  1.97486740e-01, -1.38054597e+00,
                 -1.96837860e-01],
                [-4.61147095e-01, -1.26967017e+00,  3.18151606e-02,
                 -3.25641321e-01,  8.49628605e-01, -2.11521189e-01,
                  3.85257963e-01, -2.44938103e-01, -2.05562687e+00,
                  6.37178424e-01],
                [ 7.46587893e-02, -1.12015596e-03,  6.23855996e-01,
                  1.70017302e+00,  1.14646958e+00,  9.23623538e-01,
                 -8.07893437e-01, -1.80730878e-01,  7.98667909e-01,
                 -7.10031912e-01]]])
    
    Xscmr = subtract_common_median_reference(X)
    
    Xscmr_expected = np.array([[[-1.39771005, -0.48741647,  0.        ,  0.        ,
                              2.44302608,  0.        ,  0.        ,  0.        ,
                             -0.71228316,  0.15303789],
                            [ 0.        ,  1.19311352, -0.01093103,  0.63495627,
                              0.        , -0.6472666 , -0.38573059,  0.47529226,
                              0.43642627, -0.15446945],
                            [ 0.42562426,  0.        ,  0.54546551, -2.08491595,
                             -0.78173694,  0.8544826 ,  0.64219279, -0.08500726,
                              0.        ,  0.        ]],

                           [[ 0.56297525,  0.46414451, -2.49337995,  0.        ,
                             -0.5169287 ,  0.21760115,  0.79816639,  0.37821762,
                              0.        ,  0.        ],
                            [-0.53580588, -1.26855001,  0.        , -0.78244788,
                              0.        , -1.13514473,  0.        , -0.06420722,
                             -0.6750809 ,  0.83401628],
                            [ 0.        ,  0.        ,  0.59204084,  1.24336646,
                              0.29684097,  0.        , -1.1931514 ,  0.        ,
                              2.17921388, -0.51319405]]])
    
    
    np.testing.assert_almost_equal(Xscmr,Xscmr_expected)
